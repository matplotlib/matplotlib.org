# Snippet to allow working with git checkouts of project sites that become
# toplevel directories.
(subproject) {
	# Caddy doesn't know this is a directory, so redirect to trailing / as
	# would usually happen for them.
	redir /{args.0} /{args.0}/ permanent

	handle_path /{args.0}/* {
		root * {{ caddy.site_dir }}/{args.0}
		try_files {path}.html {path}
		file_server {
			hide .git
		}
	}
}

# Setup webhooks
{% if caddy.tls_config is defined %}
https://{{ caddy.addresses.webhook }} {
	{{ caddy.tls_config }}
{% else %}
http://{{ caddy.addresses.webhook }} {
{% endif %}

	root * {{ caddy.site_dir }}

	# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#delivery-headers
	@valid_webhook {
		path /gh/*
		method POST
		header Content-Type application/json
		header User-Agent GitHub-Hookshot/*
		header X-GitHub-Event ping
		header X-GitHub-Event push
		header X-GitHub-Delivery *
		header X-Hub-Signature-256 *
	}

	handle @valid_webhook {
		reverse_proxy * localhost:1234 {
			# Don't leak out internal problems.
			@error status 4xx 5xx
			handle_response @error {
				error 400
			}
		}
	}

	handle /ping {
		reverse_proxy * localhost:1234 {
			# Don't leak out internal problems.
			@error status 4xx 5xx
			handle_response @error {
				error 503
			}
		}
	}

	handle {
		error 404
	}
}

{% if caddy.tls_config is defined %}
https://{{ caddy.addresses.main }}, https://{{ ansible_fqdn }} {
	{{ caddy.tls_config }}
{% else %}
http://{{ caddy.addresses.main }}, http://{{ ansible_fqdn }} {
{% endif %}

	root * {{ caddy.site_dir }}

{% for site in repos %}
	import subproject {{ site }}
{% endfor %}

	# Hide mpl-altair until the site is fixed.
	redir /mpl-altair https://github.com/matplotlib/mpl-altair temporary
	redir /mpl-altair/* https://github.com/matplotlib/mpl-altair temporary

	# redirect the objects.inv
	redir /objects.inv /stable/objects.inv permanent
	# Make search go to the actual docs instead of the mostly-empty brochure site.
	redir /search.html /stable/search.html?{query} temporary

	# Place the brochure site at the top level.
	@brochure file {
		root {{ caddy.site_dir }}/mpl-brochure-site
		try_files {path}.html {path}
	}
	rewrite / /mpl-brochure-site/index.html
	rewrite @brochure /mpl-brochure-site{http.matchers.file.relative}

	# Finally try any of the versioned docs.
	handle {
		root * {{ caddy.site_dir }}/matplotlib.github.com
		try_files {path}.html {path}
		file_server {
			hide .git
		}
	}

	# Use a custom 404 error page.
	handle_errors {
		@notfound expression {http.error.status_code} == 404
		root * {{ caddy.site_dir }}/mpl-brochure-site
		rewrite @notfound /404.html
		file_server {
			hide .git
		}
	}
}
